(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{259:function(t,s,a){"use strict";a.r(s);var e=a(1),n=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("p",[t._v("本文将介绍Javascript单线程和异步机制。\n")]),t._v(" "),t._m(0),t._v(" "),a("p",[t._v("    众所周知，JavaScript是一个单线程的语言，那么这就意味着它在处理复杂问题的时候必须要花费更多时间，好在js里面有个叫异步的东西，可以很好的解决这个问题。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("    简单理解就是类似队列一样。后面的事项需要等待前面的事项执行结束后再去执行。如：")]),t._v(" "),t._m(3),t._m(4),t._v(" "),a("p",[t._v("    异步与同步相对应，有点类似平行线，通过其他线程来执行另外的任务，等任务执行完毕后才在回到主线程。说到这，可能扯到了js的线程问题：")]),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),a("p",[t._v("在异步中，首先执行js线程里的任务，当主线程任务执行完成之后再去执行其他线程处理好又重新放到主线程队列里的任务。如：")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),a("p",[t._v("附一张"),a("a",{attrs:{href:"https://segmentfault.com/a/1190000004322358",target:"_blank",rel:"noopener noreferrer"}},[t._v("盗来的图"),a("OutboundLink")],1),t._v("便于理解")]),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),a("p",[t._v("    所谓js的异步机制，其实就是通过浏览器的其他线程对js主线程的辅助，通过回调函数将其他线程的处理结果返回给js主线程，从而避免拥堵，减少不必要的等待时间。")])])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍","aria-hidden":"true"}},[this._v("#")]),this._v(" 介绍")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"正文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正文","aria-hidden":"true"}},[this._v("#")]),this._v(" 正文")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同步","aria-hidden":"true"}},[this._v("#")]),this._v(" 同步")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" aa "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第一步")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aa"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第二步")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"异步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步","aria-hidden":"true"}},[this._v("#")]),this._v(" 异步")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"js线程与浏览器线程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js线程与浏览器线程","aria-hidden":"true"}},[this._v("#")]),this._v(" js线程与浏览器线程")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("    JavaScript是单线程的，这在它出生的时候就已经定了，那为什么还能分主次线程呢？其实是因为负责执行其他任务的是浏览器线程（浏览器是多线程的），js线程负责任务队列。其他线程（"),a("code",[t._v("GUI渲染线程")]),t._v("，"),a("code",[t._v("事件触发线程")]),t._v("，"),a("code",[t._v("定时触发器线程")]),t._v("，"),a("code",[t._v("异步http请求线程")]),t._v("）用于辅助主线程（"),a("code",[t._v("JS引擎线程")]),t._v("）。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"执行顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#执行顺序","aria-hidden":"true"}},[this._v("#")]),this._v(" 执行顺序")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// js主线程任务优于其他线程任务（定时器任务）执行，即使定时器为0，顺序在前。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果：b  a")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h4",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数","aria-hidden":"true"}},[this._v("#")]),this._v(" 回调函数")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("    对于类似ajax请求的任务，当js完成"),s("code",[this._v("ajax.send()")]),this._v("操作后，js主线程不需要管接下来的事情了，只需要执行当前队列的下一个任务，知道ajax请求完成再去把回调函数放入队列里面依次执行即可。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[s("img",{attrs:{src:"https://img.fog3211.com/T%25@U%60K2$@25%5DHO95CVH0EJL.png",alt:"avatar"}})])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[this._v("#")]),this._v(" 总结")])}],!1,null,null,null);s.default=n.exports}}]);